package dao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import common.DBConnect;
import dao.imp.ILopHocDao;
import model.DangKyLopHoc;
import model.LopHoc;

public class LopHocDao implements ILopHocDao {
	private ResultSet rs = null;
	private PreparedStatement pst = null;
	private DBConnect dbConnect = new DBConnect();
	private LopHoc lopHoc = new LopHoc();
	private ArrayList<LopHoc> list = new ArrayList<LopHoc>();

	
	public ArrayList<LopHoc> getAll() {
		dbConnect.getConnect();
		try {
			list = new ArrayList<LopHoc>();
			String sql = "select malophoc,tenlophoc,tenchungchi,ngaybatdau,thoigianhoc,hocphi from lophoc";
			pst = dbConnect.cn.prepareStatement(sql);
			rs = pst.executeQuery();
			while (rs.next()) {
				lopHoc = new LopHoc(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5),
						rs.getInt(6));
				list.add(lopHoc);
			}
			dbConnect.cn.close();
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return list;
	}

	
	public boolean insert(LopHoc lopHoc) {
		dbConnect.getConnect();
		try {
			String sql = "insert into lophoc (tenlophoc,tenchungchi,ngaybatdau,thoigianhoc,hocphi ) values (?,?,?,?,?) ";
			pst = dbConnect.cn.prepareStatement(sql);
			pst.setString(1, lopHoc.getTenlophoc());
			pst.setString(2, lopHoc.getTenchungchi());
			pst.setString(3, lopHoc.getNgaybatdau());
			pst.setString(4, lopHoc.getThoigianhoc());
			pst.setInt(5, lopHoc.getHocphi());
			int rs = pst.executeUpdate();
			if (rs>0) {
				dbConnect.cn.close();
				return true;
			}	
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return false;
	}

	
	public boolean update(LopHoc lopHoc) {
		dbConnect.getConnect();
		try {
			String sql = "update lophoc set tenlophoc=?,tenchungchi=?,ngaybatdau=?,thoigianhoc=?,hocphi=? where malophoc=?";
			pst = dbConnect.cn.prepareStatement(sql);
			pst.setString(1, lopHoc.getTenlophoc());
			pst.setString(2, lopHoc.getTenchungchi());
			pst.setString(3, lopHoc.getNgaybatdau());
			pst.setString(4, lopHoc.getThoigianhoc());
			pst.setInt(5, lopHoc.getHocphi());
			pst.setInt(6, lopHoc.getMalophoc());
			
			int rs = pst.executeUpdate();
			if (rs > 0) {
				dbConnect.cn.close();
				return true;
			}

		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return false;
	}

	
	public boolean delete(int malophoc) {
		dbConnect.getConnect();
		try {
			String sql = "delete from lophoc where malophoc=?";
			pst = dbConnect.cn.prepareStatement(sql);
			pst.setInt(1, malophoc);
			int rs = pst.executeUpdate();
			if (rs > 0) {
				dbConnect.cn.close();
				return true;
			}

		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return false;
	}

	
	public LopHoc getById(int malophoc) {
		dbConnect.getConnect();
		try {
			String sql = "select malophoc,tenlophoc,tenchungchi,ngaybatdau,thoigianhoc,hocphi from lophoc";
			pst = dbConnect.cn.prepareStatement(sql);
			rs = pst.executeQuery();
			while (rs.next()) {
				lopHoc = new LopHoc(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5),
						rs.getInt(6));
				dbConnect.cn.close();
				return lopHoc;
			}

		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return null;
	}

	
	public ArrayList<LopHoc> getByName(String ten) {
		// TODO Auto-generated method stub
		return null;
	}

	
	public boolean checkId(int id) {
		dbConnect.getConnect();
		try {
			String sql = "select mahocvien from hocvien_lophoc where malophoc=?";
			pst= dbConnect.cn.prepareStatement(sql);
			pst.setInt(1, id);
			rs=pst.executeQuery();
			while(rs.next()) {
				dbConnect.cn.close();
				return true;
			}
		}catch (Exception ex) {
			ex.printStackTrace();
		}
		return false;
	}

	public List<LopHoc> registerClass() {
		// TODO Auto-generated method stub
		dbConnect.getConnect();
		try {
			list = new ArrayList<LopHoc>();
			String sql = "select * from View_DanhSachLopDaDangKy";
			pst = dbConnect.cn.prepareStatement(sql);
			rs = pst.executeQuery();
			while (rs.next()) {
				lopHoc = new LopHoc(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5),rs.getInt(6));
				list.add(lopHoc);
			}
			dbConnect.cn.close();
			return list;
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return null;
	}

}
